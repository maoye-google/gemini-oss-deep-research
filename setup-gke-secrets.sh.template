#!/bin/bash

# One-time GKE secrets setup script
# This script creates the necessary secrets in your GKE cluster
# Run this manually once with your actual API keys

set -e

# Setup Environment Paramter
# export GEMINI_API_KEY=''
# export LANGSMITH_API_KEY=''

# Configuration - update these values as needed
export GKE_CLUSTER_NAME="next-demo-cluster"
export GKE_LOCATION="us-central1"  # Can be either zone (us-central1-a) or region (us-central1)
export PROJECT_ID=$(gcloud config get-value project)

# Check if required environment variables are set
if [ -z "$GEMINI_API_KEY" ]; then
    echo "Error: GEMINI_API_KEY environment variable is not set"
    echo "Please set it with: export GEMINI_API_KEY='your-api-key'"
    exit 1
fi

if [ -z "$LANGSMITH_API_KEY" ]; then
    echo "Error: LANGSMITH_API_KEY environment variable is not set"
    echo "Please set it with: export LANGSMITH_API_KEY='your-api-key'"
    exit 1
fi

echo "Setting up GKE cluster credentials..."
# Auto-detect if location is a zone or region and use appropriate flag
if [[ $GKE_LOCATION == *-[a-z] ]]; then
    echo "Using zone: $GKE_LOCATION"
    gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_LOCATION --project $PROJECT_ID
else
    echo "Using region: $GKE_LOCATION"
    gcloud container clusters get-credentials $GKE_CLUSTER_NAME --region $GKE_LOCATION --project $PROJECT_ID
fi

echo "Creating deep-research-secrets in GKE cluster..."
kubectl create secret generic deep-research-secrets \
    --from-literal=gemini-api-key="$GEMINI_API_KEY" \
    --from-literal=langsmith-api-key="$LANGSMITH_API_KEY" \
    --namespace=deep-research \
    --dry-run=client -o yaml | kubectl apply -f -

echo "Secrets created successfully!"
echo "You can now run the Cloud Build pipeline without worrying about secrets."