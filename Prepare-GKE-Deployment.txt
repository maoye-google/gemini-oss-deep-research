Please do the code refacotry to convert my project from Docker style to Google Kubernetes Engine Style.
Please refer to "docker-compose.yml" about the service launch parameters and dependencies.

Also, please check the following additional requirements:
- This is a POC project and do not have much traffic. So Please keep the pod instance number and spec as minimum as possible.
- Create a new Pod to run backend. It is a background service so do not need external IP. Please check the docker-compose.yml to understand the necessary environment parameters.
- Create a new Pod to run frontend. It is a web service frontend, and needs to handle ingress traffic. Please check the docker-compose.yml to understand the necessary environment parameters.
- Create a Ingress resource to forward all ingress traffic (which starts with "/app") to the frontend pod, and all other traffic to the backend pod. This application needs HTTPS support, so please also create a Google managed certificate (Domain = deep-research.maoye.demo.altostrat.com) for this ingress. 
- Create a static IP (name=deep-research-ip), so the GKE ingress should be using this static ip
- Please config the GKE connector to access computeAddress 
- Add the target domain (deep-research.maoye.demo.altostrat.com) to 'server.allowedHosts' in vite.config.js if it is not there
- Create necessary yaml file for deployment to GKE. Use environment parameter to specify GCP PROJECT_ID (this value should be ready when we call "cloud build submits ."), GKE_CLUSTER_NAME ("next-demo-cluster" as default value).
- Create a cloudbuild.yaml file to automate the deployment. The process should include container image build, upload image to GCP container repository, deploy the service to the target GKE cluster. Please remember to grant the default cloud build service account ($PROJECT_NUMBER-compute@) enough permission to do all these jobs.
- Please do not forget to grant necessary roles to the default service account used by Cloud Build.
- Create a README.md file to explain how to deploy this service to GKE automatically.